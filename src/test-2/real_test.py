# -*- coding: utf-8 -*-
"""final_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-c_v4OlePVctsFtuaBAZXTxHDTI5d96x
"""

import pandas as pd
import numpy as np
from sklearn.decomposition import PCA
from keras.datasets import mnist
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.multiclass import OneVsRestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train_reshaped = x_train.reshape(len(x_train), 28*28)

pca = PCA(svd_solver='full').fit(x_train_reshaped)
explained_variance = np.cumsum(pca.explained_variance_ratio_)

for i in range(len(explained_variance)):
  if(explained_variance[i] >= 0.66):
    M = i+1
    final_expl_variance = explained_variance[i]
    break
print(f"Доля объяснённой дисперсии для компоненты {M} = ", final_expl_variance)

pca_m = PCA(n_components=M, svd_solver='full').fit(x_train_reshaped)

tr_x, ts_x, tr_y, ts_y = train_test_split(x_train_reshaped, y_train, test_size=0.3, random_state=2)
tr_x = pca_m.transform(tr_x)
ts_x = pca_m.transform(ts_x)

print(f"выборочное среднее нулевой колонки: ", round(np.mean(tr_x.transpose()[0]), 4))

forest = RandomForestClassifier(criterion='gini', min_samples_leaf=10, max_depth=20, n_estimators=10, random_state=2)
cfl_forest = OneVsRestClassifier(forest).fit(tr_x, tr_y)

y_pred = cfl_forest.predict(ts_x)

cm = confusion_matrix(ts_y, y_pred)

print(f"Количество верно классифицированных объектов класса 8:", cm[8][8])

lr = LogisticRegression(solver='lbfgs', random_state=2)
cfl_lr = OneVsRestClassifier(lr).fit(tr_x, tr_y)

y_pred = cfl_lr.predict(ts_x)

cm = confusion_matrix(ts_y, y_pred)

print(f"Количество верно классифицированных объектов класса 6:", cm[6][6])

tree = DecisionTreeClassifier(criterion='gini', min_samples_leaf=10, max_depth=20, random_state=2)
cfl_tree = OneVsRestClassifier(tree).fit(tr_x, tr_y)

y_pred = cfl_tree.predict(ts_x)

cm = confusion_matrix(ts_y, y_pred)

print(f"Количество верно классифицированных объектов класса 2:", cm[2][2])

data = pd.read_csv('https://courses.openedu.ru/assets/courseware/v1/25c0abab1076236b7427fac937c5663e/asset-v1:ITMOUniversity+MLDATAN+spring_2022_ITMO_bac+type@asset+block/pred_for_task.csv',
                   delimiter=',', index_col='FileName')
x_test = data.drop(['Label'], axis=1)
x_test_trans = pca_m.transform(x_test)

y_pred = cfl_forest.predict_proba(x_test_trans)
idx = list(data.index).index("file12")
print(f"вероятность отнесения изображения file12: ", round(y_pred[idx][data['Label'][idx]], 5))

y_pred = cfl_lr.predict_proba(x_test_trans)
idx = list(data.index).index("file9")
print(f"вероятность отнесения изображения file9: ", round(y_pred[idx][data['Label'][idx]], 5))

y_pred = cfl_tree.predict_proba(x_test_trans)
idx = list(data.index).index("file8")
print(f"вероятность отнесения изображения file8: ", round(y_pred[idx][data['Label'][idx]], 5))